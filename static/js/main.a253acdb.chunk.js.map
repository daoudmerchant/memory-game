{"version":3,"sources":["images sync nonrecursive //.jpg$","images/01.jpg","images/02.jpg","images/03.jpg","images/04.jpg","images/05.jpg","images/06.jpg","images/07.jpg","images/08.jpg","images/09.jpg","images/10.jpg","images/11.jpg","images/12.jpg","images/13.jpg","images/14.jpg","images/15.jpg","images/16.jpg","images/17.jpg","images/18.jpg","images/19.jpg","images/20.jpg","images/21.jpg","images/22.jpg","images/23.jpg","images/24.jpg","images/25.jpg","images/26.jpg","images/27.jpg","images/28.jpg","images/29.jpg","images/30.jpg","images/31.jpg","images/32.jpg","images/33.jpg","images/34.jpg","images/35.jpg","images/36.jpg","images/37.jpg","images/38.jpg","images/39.jpg","images/40.jpg","components/Header.js","components/Album.js","imageLoader.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Header","score","highScore","completed","Album","React","memo","src","reportClick","albumId","opacity","filterColor","onClickClass","alt","style","className","onClick","images","r","console","log","albums","forEach","item","push","Number","slice","clicked","display","importAll","require","Game","updateScore","useState","gameState","setGameState","tileSet","setTileSet","setOpacity","setFilterColor","gridCount","albumQuantity","length","getRandomInteger","max","Math","floor","random","randomiseTiles","albumChoices","i","albumIndexes","j","newRandomNumber","newRandomIndex","pop","albumSet","Promise","resetTileSet","a","newTileSet","useEffect","setTimeout","some","album","unclickedAlbums","filter","clickedIndexes","k","replacedIndex","replacementAlbum","prevTileSet","tileSetWithUnclicked","index","isCorrectClick","isWinningClick","resultClass","nextState","prevGameState","newGameState","fadeOutTimer","resetBoardTimer","alert","gameStyle","gridTemplateColumns","gridTemplateRows","default","App","setScore","setHighScore","setCompleted","albumCount","isNewClick","newHighScore","newCompleted","prevScore","newScore","prevCompleted","prevHighScore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a253acdb.chunk.js","sourcesContent":["var map = {\n\t\"./01.jpg\": 21,\n\t\"./02.jpg\": 22,\n\t\"./03.jpg\": 23,\n\t\"./04.jpg\": 24,\n\t\"./05.jpg\": 25,\n\t\"./06.jpg\": 26,\n\t\"./07.jpg\": 27,\n\t\"./08.jpg\": 28,\n\t\"./09.jpg\": 29,\n\t\"./10.jpg\": 30,\n\t\"./11.jpg\": 31,\n\t\"./12.jpg\": 32,\n\t\"./13.jpg\": 33,\n\t\"./14.jpg\": 34,\n\t\"./15.jpg\": 35,\n\t\"./16.jpg\": 36,\n\t\"./17.jpg\": 37,\n\t\"./18.jpg\": 38,\n\t\"./19.jpg\": 39,\n\t\"./20.jpg\": 40,\n\t\"./21.jpg\": 41,\n\t\"./22.jpg\": 42,\n\t\"./23.jpg\": 43,\n\t\"./24.jpg\": 44,\n\t\"./25.jpg\": 45,\n\t\"./26.jpg\": 46,\n\t\"./27.jpg\": 47,\n\t\"./28.jpg\": 48,\n\t\"./29.jpg\": 49,\n\t\"./30.jpg\": 50,\n\t\"./31.jpg\": 51,\n\t\"./32.jpg\": 52,\n\t\"./33.jpg\": 53,\n\t\"./34.jpg\": 54,\n\t\"./35.jpg\": 55,\n\t\"./36.jpg\": 56,\n\t\"./37.jpg\": 57,\n\t\"./38.jpg\": 58,\n\t\"./39.jpg\": 59,\n\t\"./40.jpg\": 60\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","export default __webpack_public_path__ + \"static/media/01.63fcf4e6.jpg\";","export default __webpack_public_path__ + \"static/media/02.1599a0b3.jpg\";","export default __webpack_public_path__ + \"static/media/03.0b52b0f8.jpg\";","export default __webpack_public_path__ + \"static/media/04.4f06cbab.jpg\";","export default __webpack_public_path__ + \"static/media/05.f4916ee0.jpg\";","export default __webpack_public_path__ + \"static/media/06.2a1a88a0.jpg\";","export default __webpack_public_path__ + \"static/media/07.dadab844.jpg\";","export default __webpack_public_path__ + \"static/media/08.60629f1c.jpg\";","export default __webpack_public_path__ + \"static/media/09.aead3c88.jpg\";","export default __webpack_public_path__ + \"static/media/10.0315f4ee.jpg\";","export default __webpack_public_path__ + \"static/media/11.e5f5cec6.jpg\";","export default __webpack_public_path__ + \"static/media/12.8654a0d6.jpg\";","export default __webpack_public_path__ + \"static/media/13.52c14f4a.jpg\";","export default __webpack_public_path__ + \"static/media/14.c5d7b16f.jpg\";","export default __webpack_public_path__ + \"static/media/15.0a6bf62a.jpg\";","export default __webpack_public_path__ + \"static/media/16.9813e9a0.jpg\";","export default __webpack_public_path__ + \"static/media/17.c73277c5.jpg\";","export default __webpack_public_path__ + \"static/media/18.076c98bb.jpg\";","export default __webpack_public_path__ + \"static/media/19.f61df271.jpg\";","export default __webpack_public_path__ + \"static/media/20.ca103d31.jpg\";","export default __webpack_public_path__ + \"static/media/21.c98dea81.jpg\";","export default __webpack_public_path__ + \"static/media/22.fbef02e2.jpg\";","export default __webpack_public_path__ + \"static/media/23.0a531bdb.jpg\";","export default __webpack_public_path__ + \"static/media/24.614fcda3.jpg\";","export default __webpack_public_path__ + \"static/media/25.16af793c.jpg\";","export default __webpack_public_path__ + \"static/media/26.0c9b0afb.jpg\";","export default __webpack_public_path__ + \"static/media/27.d03fcca2.jpg\";","export default __webpack_public_path__ + \"static/media/28.a3334ab7.jpg\";","export default __webpack_public_path__ + \"static/media/29.f0f411db.jpg\";","export default __webpack_public_path__ + \"static/media/30.9be0bff6.jpg\";","export default __webpack_public_path__ + \"static/media/31.5d4b4b29.jpg\";","export default __webpack_public_path__ + \"static/media/32.4bdc6e7d.jpg\";","export default __webpack_public_path__ + \"static/media/33.10e01b56.jpg\";","export default __webpack_public_path__ + \"static/media/34.fda783a0.jpg\";","export default __webpack_public_path__ + \"static/media/35.b9aa9a97.jpg\";","export default __webpack_public_path__ + \"static/media/36.4c441feb.jpg\";","export default __webpack_public_path__ + \"static/media/37.82e2b9a4.jpg\";","export default __webpack_public_path__ + \"static/media/38.0b5c7267.jpg\";","export default __webpack_public_path__ + \"static/media/39.ae1cc704.jpg\";","export default __webpack_public_path__ + \"static/media/40.4cc504b0.jpg\";","import React from \"react\";\nimport \"../styles/Header.css\";\n\nconst Header = ({ score, highScore, completed }) => {\n  return (\n    <header>\n      <h1>\n        Blue Note <span>Memory Game</span>\n      </h1>\n      <div id=\"scoreboard\">\n        <p>{`Current score: ${score}`}</p>\n        <p>{`High Score: ${highScore}`}</p>\n        <p>{`Completed rounds: ${completed}`}</p>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\n// pure component\nconst Album = React.memo(\n  ({ src, reportClick, albumId, opacity, filterColor }) => {\n    const onClickClass = filterColor ? filterColor[albumId] : \"clickableImg\";\n    return (\n      <img\n        key={`image-${albumId}`}\n        src={src}\n        alt={`album-art-${albumId}`}\n        style={{ opacity: opacity }}\n        className={onClickClass}\n        onClick={() => {\n          reportClick(albumId);\n        }}\n      />\n    );\n  }\n);\n\nexport default Album;\n","// Import all images (Webpack)\nconst importAll = (r) => {\n  console.log(\"Importing images\");\n  let albums = [];\n  r.keys().forEach((item) => {\n    albums.push({\n      ...r(item),\n      // picture count begins at 1\n      id: Number(item.slice(2, 4)) - 1,\n      clicked: false,\n      style: {\n        display: \"none\",\n      },\n    });\n  });\n  return albums;\n};\nconst images = importAll(require.context(\"./images\", false, /\\.jpg$/));\n\nexport { images };\n","import React, { useState, useEffect } from \"react\";\nimport Album from \"./Album\";\nimport { images } from \"../imageLoader\";\nimport \"../styles/Game.css\";\n\n// SET GRID SIZE (no. of tiles per length of square)\nconst gridSize = 3;\n\nconst Game = React.memo(({ score, updateScore }) => {\n  // console.log(\"Rendering the game\"); // FIX?: Game rendered 10 times as loading state updates\n\n  const [gameState, setGameState] = useState(images);\n  const [tileSet, setTileSet] = useState(null);\n  const [opacity, setOpacity] = useState(\"0%\");\n  const [filterColor, setFilterColor] = useState(null);\n  const gridCount = gridSize ** 2;\n  const albumQuantity = Object.keys(gameState).length;\n\n  const getRandomInteger = (max) => {\n    return Math.floor(Math.random() * max);\n  };\n\n  // return random tile array\n  const randomiseTiles = (gridCount) => {\n    let albumChoices = [];\n    for (let i = 0; i < albumQuantity; i++) {\n      albumChoices.push(i);\n    }\n    // albumChoices now array of all available indexes\n\n    let albumIndexes = [];\n    for (let j = 0; j < gridCount; j++) {\n      const newRandomNumber = getRandomInteger(albumChoices.length);\n      const newRandomIndex = albumChoices[newRandomNumber];\n      albumIndexes.push(newRandomIndex);\n      if (newRandomNumber < albumChoices.length - 1) {\n        // not the last item in the array\n        albumChoices[newRandomNumber] = albumChoices.pop();\n        // replace with last item of array\n      } else {\n        // last item of array\n        albumChoices.pop();\n      }\n    }\n    // albumIndexes now array of random non-repeating indexes\n\n    const albumSet = albumIndexes.map((id) => gameState[id]);\n    return new Promise((resolve) => resolve(albumSet));\n  };\n\n  const resetTileSet = async () => {\n    const newTileSet = await randomiseTiles(gridCount);\n    setTileSet(newTileSet);\n  };\n\n  // FIRST RENDER\n  // - setTileSet to keep useState immutable\n  useEffect(() => {\n    if (!tileSet) {\n      resetTileSet();\n    }\n  }, []);\n\n  // EACH RENDER\n  // - fade-in (FIX: rerender)\n  useEffect(() => {\n    setTimeout(() => setOpacity(\"100%\"), 200);\n  }, [gameState]);\n\n  // - check if at least one album is unclicked and insert random unclicked album if not\n  useEffect(() => {\n    if (tileSet && !tileSet.some((album) => !album.clicked)) {\n      // tileSet set & not a single album unclicked\n      const unclickedAlbums = gameState.filter((album) => !album.clicked);\n      let clickedIndexes = [];\n      for (let k = 0; k < gridSize; k++) {\n        if (tileSet[k].clicked) {\n          clickedIndexes.push(k);\n        }\n      }\n      const replacedIndex =\n        clickedIndexes[getRandomInteger(clickedIndexes.length)];\n      const replacementAlbum =\n        unclickedAlbums[getRandomInteger(unclickedAlbums.length)];\n      setTileSet((prevTileSet) => {\n        const tileSetWithUnclicked = [...prevTileSet];\n        tileSetWithUnclicked[replacedIndex] = replacementAlbum;\n        return tileSetWithUnclicked;\n      });\n    }\n  }, [gameState, score, tileSet]);\n\n  // TODO: report loading?\n\n  // update game state on click\n  const reportClick = (id) => {\n    const index = Number(id);\n    const isCorrectClick = gameState[index].clicked === false;\n    const isWinningClick = isCorrectClick && score === albumQuantity - 1;\n    const resultClass = isCorrectClick ? \"success\" : \"failure\";\n    const resetGameState = !isCorrectClick || isWinningClick ? true : false;\n    const nextState = resetGameState\n      ? images\n      : (prevGameState) => {\n          const newGameState = [...prevGameState];\n          newGameState[index] = {\n            ...prevGameState[index],\n            clicked: true,\n          };\n          return newGameState;\n        };\n\n    // TODO: Improve transition animation logic\n    const fadeOutTimer = isCorrectClick ? 250 : 900;\n    const resetBoardTimer = isCorrectClick ? 350 : 1100;\n\n    // TODO: Improve win state alert\n    if (isWinningClick) {\n      alert(\"Congratulations, you win!\");\n    }\n\n    // TODO: Prevent rerender on each state change\n    updateScore(isCorrectClick);\n    setFilterColor({ [id]: resultClass });\n    setTimeout(() => setOpacity(\"0%\"), fadeOutTimer);\n    setTimeout(() => {\n      setGameState(nextState);\n      setFilterColor(null);\n      resetTileSet();\n    }, resetBoardTimer);\n  };\n\n  const gameStyle = {\n    gridTemplateColumns: `repeat(${gridSize}, 1fr)`,\n    gridTemplateRows: `repeat(${gridSize}, 1fr)`,\n  };\n\n  return !tileSet ? null : (\n    <div id=\"game\" style={gameStyle}>\n      {tileSet.map((album) => {\n        return (\n          <Album\n            key={`album-${album.id}`}\n            src={album.default}\n            albumId={album.id}\n            reportClick={reportClick}\n            opacity={opacity}\n            filterColor={filterColor}\n          />\n        );\n      })}\n    </div>\n  );\n});\n\nexport default Game;\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Game from \"./components/Game\";\nimport { images } from \"./imageLoader\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [completed, setCompleted] = useState(0);\n  const albumCount = Object.keys(images).length;\n\n  const updateScore = (isNewClick) => {\n    let newHighScore = false;\n    let newCompleted = false;\n    if (isNewClick) {\n      // success\n      setScore((prevScore) => {\n        const newScore = prevScore + 1;\n        if (highScore < newScore) {\n          newHighScore = true;\n        }\n        if (newScore === albumCount) {\n          // winning click\n          newCompleted = true;\n          return 0;\n        } else {\n          // advance game\n          return newScore;\n        }\n      });\n      newCompleted && setCompleted((prevCompleted) => prevCompleted + 1);\n      newHighScore && setHighScore((prevHighScore) => prevHighScore + 1);\n    } else {\n      // failure\n      setScore(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header score={score} highScore={highScore} completed={completed} />\n      <main>\n        <Game score={score} updateScore={updateScore} />\n      </main>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}